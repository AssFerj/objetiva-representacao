"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/painel/page",{

/***/ "(app-pages-browser)/./src/services/cloudflareStorage.ts":
/*!*******************************************!*\
  !*** ./src/services/cloudflareStorage.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uploadToCloudflare: () => (/* binding */ uploadToCloudflare)\n/* harmony export */ });\nconst uploadToCloudflare = async (param)=>{\n    let { file, fileName, metadata } = param;\n    try {\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('fileName', fileName);\n        if (metadata) {\n            formData.append('metadata', JSON.stringify(metadata));\n        }\n        const response = await fetch('/api/upload', {\n            method: 'POST',\n            body: formData\n        });\n        if (!response.ok) {\n            const error = await response.text();\n            throw new Error(error);\n        }\n        const data = await response.json();\n        return data.url;\n    } catch (error) {\n        console.error('Error uploading to Cloudflare R2:', error);\n        throw new Error('Erro ao enviar arquivo para o armazenamento');\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9jbG91ZGZsYXJlU3RvcmFnZS50cyIsIm1hcHBpbmdzIjoiOzs7O0FBVU8sTUFBTUEscUJBQXFCO1FBQU8sRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLFFBQVEsRUFBb0I7SUFDckYsSUFBSTtRQUNGLE1BQU1DLFdBQVcsSUFBSUM7UUFDckJELFNBQVNFLE1BQU0sQ0FBQyxRQUFRTDtRQUN4QkcsU0FBU0UsTUFBTSxDQUFDLFlBQVlKO1FBQzVCLElBQUlDLFVBQVU7WUFDWkMsU0FBU0UsTUFBTSxDQUFDLFlBQVlDLEtBQUtDLFNBQVMsQ0FBQ0w7UUFDN0M7UUFFQSxNQUFNTSxXQUFXLE1BQU1DLE1BQU0sZUFBZTtZQUMxQ0MsUUFBUTtZQUNSQyxNQUFNUjtRQUNSO1FBRUEsSUFBSSxDQUFDSyxTQUFTSSxFQUFFLEVBQUU7WUFDaEIsTUFBTUMsUUFBUSxNQUFNTCxTQUFTTSxJQUFJO1lBQ2pDLE1BQU0sSUFBSUMsTUFBTUY7UUFDbEI7UUFFQSxNQUFNRyxPQUFPLE1BQU1SLFNBQVNTLElBQUk7UUFDaEMsT0FBT0QsS0FBS0UsR0FBRztJQUNqQixFQUFFLE9BQU9MLE9BQU87UUFDZE0sUUFBUU4sS0FBSyxDQUFDLHFDQUFxQ0E7UUFDbkQsTUFBTSxJQUFJRSxNQUFNO0lBQ2xCO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiL2hvbWUvYXNzaXMvRG9jdW1lbnRzL2Rldi9hc3Npcy9vYmpldGl2YS1yZXByZXNlbnRhY2FvL3NyYy9zZXJ2aWNlcy9jbG91ZGZsYXJlU3RvcmFnZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFVwbG9hZEZpbGVQYXJhbXMge1xuICBmaWxlOiBGaWxlO1xuICBmaWxlTmFtZTogc3RyaW5nO1xuICBtZXRhZGF0YT86IHtcbiAgICB1c2VySWQ6IHN0cmluZztcbiAgICB1c2VyRW1haWw6IHN0cmluZztcbiAgICB1cGxvYWRlZEF0OiBzdHJpbmc7XG4gIH07XG59XG5cbmV4cG9ydCBjb25zdCB1cGxvYWRUb0Nsb3VkZmxhcmUgPSBhc3luYyAoeyBmaWxlLCBmaWxlTmFtZSwgbWV0YWRhdGEgfTogVXBsb2FkRmlsZVBhcmFtcyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGVOYW1lJywgZmlsZU5hbWUpO1xuICAgIGlmIChtZXRhZGF0YSkge1xuICAgICAgZm9ybURhdGEuYXBwZW5kKCdtZXRhZGF0YScsIEpTT04uc3RyaW5naWZ5KG1ldGFkYXRhKSk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS91cGxvYWQnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IGZvcm1EYXRhLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgY29uc3QgZXJyb3IgPSBhd2FpdCByZXNwb25zZS50ZXh0KCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgcmV0dXJuIGRhdGEudXJsO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHVwbG9hZGluZyB0byBDbG91ZGZsYXJlIFIyOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Vycm8gYW8gZW52aWFyIGFycXVpdm8gcGFyYSBvIGFybWF6ZW5hbWVudG8nKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJ1cGxvYWRUb0Nsb3VkZmxhcmUiLCJmaWxlIiwiZmlsZU5hbWUiLCJtZXRhZGF0YSIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJvayIsImVycm9yIiwidGV4dCIsIkVycm9yIiwiZGF0YSIsImpzb24iLCJ1cmwiLCJjb25zb2xlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/cloudflareStorage.ts\n"));

/***/ })

});